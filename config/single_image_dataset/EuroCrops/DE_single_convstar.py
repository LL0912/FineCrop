config= dict(
    dataset=dict(
        train=dict(type="ImageBase_MultiLevel_Dataset",
                   params=dict(
                       data_path="/data1/ll20/Pub_dataset/EuroCrops/DE_2021/NPY_mini_norm_crop_small_2/train",
                       doy={"32ULB": [62, 152, 282, 297],
                            "32ULC": [42, 117, 152, 237, 282, 297],
                            "32UMC": [44,52,89,117,164,252,282,297],
                            "32UMB": [44,54,89,164,199,354]},
                       num_level=4,
                       select_type=None,
                       select_class=None,
                   )
                   ),
        val=dict(type="ImageBase_MultiLevel_Dataset",
                 params=dict(
                     data_path="/data1/ll20/Pub_dataset/EuroCrops/DE_2021/NPY_mini_norm_crop_small_2/val",
                     doy={"32ULB": [62, 152, 282, 297],
                            "32ULC": [42, 117, 152, 237, 282, 297],
                            "32UMC": [44,52,89,117,164,252,282,297],
                            "32UMB": [44,54,89,164,199,354]},
                     num_level=4,
                     select_type=None,
                     select_class=None,
                 )),
        test=dict(type="ImageBase_MultiLevel_Dataset",
                  params=dict(
                      data_path="/data1/ll20/Pub_dataset/EuroCrops/DE_2021/NPY_mini_norm_crop_small_2/test",
                      doy={"32ULB": [62, 152, 282, 297],
                            "32ULC": [42, 117, 152, 237, 282, 297],
                            "32UMC": [44,52,89,117,164,252,282,297],
                            "32UMB": [44,54,89,164,199,354]},
                      num_level=4,
                      select_type=None,
                      select_class=None,
                  )),

        batch_size=32,
        num_workers=4,
),
#    model=dict(
#        type="utae",
#        params=dict(input_dim=10,
#                    num_labelevel=1,
#                    num_classlevel=[133]),
#    ),
     model=dict(
         type="convrnn",
         params=dict(height=32,
                     width=32,
                     input_dim=10,
                     nstage=1,
                     cell="star",
                     num_classlevel=[101],
                     n_layers=4,
                    use_channel_fg=True,
                    channel_group=4,
                    use_convblock=True),
     ),
##     model=dict(
##         type="unet3d",
##         params=dict(in_channel=10,
##                     num_labelevel=1,
##                     num_classlevel=[133]),
##     ),

    loss_function=dict(
        loss_ce=dict(type="CrossEntropyLoss",
                    params=dict(ignore_index=255)),
        loss_lt=dict(type="PRLDAMLoss",
                    params=dict(s=1,ignore_index=255)),
        loss_cd=dict(type="ChaneldeviParcelLoss",
                    params=dict(cnum=4,
                    num_class=101,
                    use_mask=True,
                    ignore_index=255)),
    ),
    optimizer=dict(
#        type="Adam",
#        params=dict(lr=0.001,
#                    weight_decay=0.0001),
        type="SGD",
        params=dict(lr=0.01,
                    weight_decay=2e-4,
                    momentum=0.9)
                    
    ),
    lr_scheduler=dict(type="StepLR",
        params=dict(
                    step_size=5,
                    gamma=0.1,
                    last_epoch=-1)),

    trainer=dict(type='UnequalImage_SinglevelTrainer_womap_pr_cd',
                 params=dict(
                    max_iters=50,
                    gpu_ids=[0],
                    grad_clip=1,
                    lambda_l1=0.1,
                    lambda_l2=0.5,
                    lambda_l3=0.5,
                    lambda_l4=0.5,
                    lambda_lt=0.3,
                    lambda_cd_alpha=0.5,
                    lambda_cd_beta=5.0,
                 )),
    meta=dict(
        log_way="scaler" ,##option:["scaler","wandb"],
        ignore_index=255,
        save_path=r"/data1/ll20/Pub_dataset/EuroCrops/DE_2021/result_2/mini_2_sl_l3/",
        area="DE",
        num_classlevel=[7, 40, 101, 133],
        best_iter=33,
        train_level=3,
        train_mode="ltpr_no_cd", #[lt_dw,ltpr_no,ltpr_dw,ce_no] 
        model_name="convstar_prldam_prcd",
        num_each_level=dict(
        l1=[19481645,381128,808618,254,280992,382669,396197],
        l2=[7126011,2108663,3199228,494560,308763,113860,3050497,91816,340705,277547,167435,2008,43170,4562,1326,161,373731,3098,301510,51396,46092,589,1428,941607,381,245454,186047,381128,479412,54467,1891,1178,246037,25633,254,10575,104,6896,382669,396197],
        l3=[2138767,267871,364138,1808976,671874,728161,506041,10138,564085,16031,49929,1069059,349,1334,633777,57259,3199228,377285,17537,7947,4849,17309,65924,215,2717,777,308763,1561,144,2902,1686,186,1587,455,490,618,549,101,888,40721,4069,1484,318,2168,21879,113,139,8645,2207,1604,105148,1025216,1920133,91816,340705,277547,16624,382,101104,49325,1640,368,43170,4562,1326,161,373731,3098,301510,51396,46092,589,1428,30945,409701,32713,3328,4658,449234,11028,381,8108,10958,8486,113832,186047,381128,479412,54467,685,1206,1178,246037,25633,254,263417,10575,104,6896,382669,396197],
        l4=[1961430,177337,258447,9424,340879,23259,1246702,562274,106208,565666,728161,473969,32072,10138,554340,9745,14283,1748,29220,20709,346885,1069059,349,1334,633777,57259,3199228,353854,910,22521,17537,7947,4849,17309,417,11872,541,3543,67,1727,1357,1546,2346,530,2415,234,35288,859,300,2254,132,215,2717,777,308763,19346,1561,144,2902,1686,186,1587,455,490,618,549,101,888,40721,4069,1484,318,2168,21879,113,139,8645,2207,1604,86374,196834,827674,708,1920133,91816,340705,277547,16624,382,101104,49325,1640,368,43170,4562,1326,161,373731,3098,301510,51396,46092,589,1428,30945,409701,32713,3328,4658,449234,11028,381,104070,8108,10958,8486,113832,186047,381128,479412,54467,685,1206,1178,246037,25633,254,263417,10575,104,6896,382669,396197]
        ),
        parcel_each_level=dict(
        l1=[42413,1368,4198,1,725,2862,2334],
        l2=[14878,3879,5244,912,553,844,7569,323,2058,804,386,11,93,16,9,3,924,14,479,262,80,4,9,1501,3,382,1173,1368,3080,275,15,13,752,63,1,54,2,13,2862,2334],
        l3=[3939,606,811,3918,2098,1338,1034,30,928,28,148,1815,3,3,1119,151,5244,604,67,10,17,44,146,2,17,5,553,7,2,12,4,1,12,2,2,3,9,1,3,236,32,9,3,4,84,1,3,33,4,4,176,3287,4106,323,2058,804,30,1,259,96,9,2,93,16,9,3,924,14,479,262,80,4,9,39,549,128,11,18,735,21,3,5,16,22,159,1173,1368,3080,275,5,10,13,752,63,1,656,54,2,13,2862,2334],
        l4=[3412,527,578,28,731,80,2284,1634,286,1812,1338,919,115,30,905,23,23,5,66,82,788,1815,3,3,1119,151,5244,563,2,39,67,10,17,44,2,25,6,6,2,4,3,3,7,4,13,3,52,4,4,3,1,2,17,5,553,373,7,2,12,4,1,12,2,2,3,9,1,3,236,32,9,3,4,84,1,3,33,4,4,120,815,2469,3,4106,323,2058,804,30,1,259,96,9,2,93,16,9,3,924,14,479,262,80,4,9,39,549,128,11,18,735,21,3,180,5,16,22,159,1173,1368,3080,275,5,10,13,752,63,1,656,54,2,13,2862,2334],
        ),
        map_dict={1: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], 1: [118], 2: [119, 120, 121, 122, 123, 124, 125], 3: [126], 4: [127, 128, 129, 130], 5: [131], 6: [132]},
                  2: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 1: [20, 21, 22, 23, 24, 25], 2: [26], 3: [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], 4: [54], 5: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], 6: [79, 80, 81, 82, 83], 7: [84], 8: [85], 9: [86], 10: [87, 88, 89, 90], 11: [91, 92], 12: [93], 13: [94], 14: [95], 15: [96], 16: [97], 17: [98], 18: [99], 19: [100], 20: [101], 21: [102], 22: [103], 23: [104, 105, 106, 107, 108, 109, 110], 24: [111], 25: [112, 113, 114, 115, 116], 26: [117], 27: [118], 28: [119], 29: [120], 30: [121, 122], 31: [123], 32: [124], 33: [125], 34: [126], 35: [128], 36: [129], 37: [130], 38: [131], 39: [132]},
                  3: {0: [0, 1], 1: [2, 3], 2: [4, 5], 3: [6, 7], 4: [8, 9], 5: [10], 6: [11, 12], 7: [13], 8: [14, 15], 9: [16, 17], 10: [18, 19], 11: [21], 12: [22], 13: [23], 14: [24], 15: [25], 16: [26], 17: [27, 28, 29], 18: [30], 19: [31], 20: [32], 21: [33], 22: [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], 23: [51], 24: [52], 25: [53], 26: [54], 27: [56], 28: [57], 29: [58], 30: [59], 31: [60], 32: [61], 33: [62], 34: [63], 35: [64], 36: [65], 37: [66], 38: [67], 39: [68], 40: [69], 41: [70], 42: [71], 43: [72], 44: [73], 45: [74], 46: [75], 47: [76], 48: [77], 49: [78], 50: [79], 51: [80, 81, 82], 52: [83], 53: [84], 54: [85], 55: [86], 56: [87], 57: [88], 58: [89], 59: [90], 60: [91], 61: [92], 62: [93], 63: [94], 64: [95], 65: [96], 66: [97], 67: [98], 68: [99], 69: [100], 70: [101], 71: [102], 72: [103], 73: [104], 74: [105], 75: [106], 76: [107], 77: [108], 78: [109], 79: [110], 80: [111], 81: [113], 82: [114], 83: [115], 84: [116], 85: [117], 86: [118], 87: [119], 88: [120], 89: [121], 90: [122], 91: [123], 92: [124], 93: [125], 94: [126], 95: [127], 96: [128], 97: [129], 98: [130], 99: [131], 100: [132]}}



    ),

)

