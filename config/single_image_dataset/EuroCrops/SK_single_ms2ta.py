config= dict(
    dataset=dict(
        train=dict(type="ImageBase_MultiLevel_Dataset",
                   params=dict(
                       data_path="/data1/ll20/Pub_dataset/EuroCrops/SK_select/NPY_mini_norm_crop_small_2/train",
                       doy={"33UXP": [32,167,187,207,222,247,252,277,297,302,327],
                            "33UYP": [57,62,167,187,222,252,277,282,297,302,327]},
                       num_level=4,
                       select_type= None,
                       select_class=None,
                            )
                   ),
        val=dict(type="ImageBase_MultiLevel_Dataset",
                   params=dict(
                       data_path="/data1/ll20/Pub_dataset/EuroCrops/SK_select/NPY_mini_norm_crop_small_2/val",
                       doy={"33UXP": [32,167,187,207,222,247,252,277,297,302,327],
                            "33UYP": [57,62,167,187,222,252,277,282,297,302,327]},
                       num_level=4,
                       select_type= None,
                       select_class=None,
                            )),
        test=dict(type="ImageBase_MultiLevel_Dataset",
                   params=dict(
                       data_path="/data1/ll20/Pub_dataset/EuroCrops/SK_select/NPY_mini_norm_crop_small_2/test",
                       doy={"33UXP": [32,167,187,207,222,247,252,277,297,302,327],
                            "33UYP": [57,62,167,187,222,252,277,282,297,302,327]},
                       num_level=4,
                       select_type= None,
                       select_class=None,
                            )),

        batch_size=32,
        num_workers=4,
),
   model=dict(
       type="ms2ta",
       params=dict(input_dim=10,
                   num_labelevel=1,
                   encoder_widths=[32, 64, 128, 256],
                   decoder_widths=[64, 64, 128, 256],
                   num_classlevel=[73]),
   ),
#     model=dict(
#         type="convrnn",
#         params=dict(height=32,
#                     width=32,
#                     input_dim=10,
#                     nstage=1,
#                     cell="gru",
#                     num_classlevel=[87]),
#     ),
    #  model=dict(
    #      type="unet3d",
    #      params=dict(in_channel=10,
    #                  num_labelevel=1,
    #                  num_classlevel=[87]),
    #  ),

    loss_function=dict(
        loss_ce=dict(type="CrossEntropyLoss",
                    params=dict(ignore_index=255)),
        loss_lt=dict(type="PRLDAMLoss",
                    params=dict(s=1,ignore_index=255)),
    ),
    optimizer=dict(
#        type="Adam",
#        params=dict(lr=0.001,
#                    weight_decay=0.0001),
        type="SGD",
        params=dict(lr=0.01,
                    weight_decay=0.0001,
                    momentum=0.9)
    ),
    lr_scheduler=dict(type="StepLR",
        params=dict(
                    step_size=5,
                    gamma=0.1,
                    last_epoch=-1)),

    trainer=dict(type='UnequalImage_SinglevelTrainer_womap',
                 params=dict(
                    max_iters=50,
                    gpu_ids=[0,1],
                    grad_clip=1,
                    lambda_l1=0.1,
                    lambda_l2=0.5,
                    lambda_l3=0.5,
                    lambda_l4=0.5,
                    lambda_lt=0.3,

                 )),
    meta=dict(
        log_way="wandb" ,##option:["scaler","wandb"],
        ignore_index=255,
        save_path="/data1/ll20/Pub_dataset/EuroCrops/SK_select/result_2/mini_2_sl_l3/",
        area="SK",
        best_iter=50,
        train_level=3,
        train_mode="ltpr_no", #[lt_dw,ltpr_no,ltpr_dw,ce_no] 
        model_name="ms2ta_prldam_no",
        num_classlevel=[6,32,73,87],
        num_each_level=dict(
        l1=[39791879, 776723, 1042088, 747, 123135, 149178],
        l2=[13467507, 970393, 329251, 602, 13743982, 11239, 9194, 5453798, 1244907, 21632, 303054, 36359, 1330070, 12318, 346341, 115799, 9781, 10992, 2154791, 3773, 216096, 776723, 248006, 6827, 49045, 707210, 15956, 15044, 747, 101500, 21635, 149178],
        l3=[1336889, 3078326, 544334, 6361579, 637196, 628046, 199409, 419745, 261983, 502, 2497, 14729, 924413, 28252, 329251, 602, 647, 17356, 8153883, 4758021, 456680, 7630, 2304, 88518, 99445, 155864, 3634, 11239, 4148, 2158112, 3295686, 1244907, 21632, 1655, 229, 1917, 299253, 36359, 1330070, 12318, 320155, 26186, 10097, 105702, 9781, 10992, 5044, 50318, 127424, 1972005, 3389, 216096, 776723, 130260, 15447, 16868, 18305, 4745, 37081, 345, 1151, 5240, 91, 1, 106, 48939, 707210, 15956, 5252, 747, 101500, 21635, 149178],
        l4=[640507, 696382, 3078326, 544334, 2064498, 4297081, 9858, 628046, 199409, 419745, 261983, 502, 2497, 14729, 924413, 28252, 329251, 602, 647, 17356, 8095127, 19895, 4758021, 456680, 7630, 2304, 1052, 27702, 9250, 99445, 155864, 3634, 11239, 5046, 4148, 2056465, 90879, 10768, 3295686, 1244907, 21632, 1655, 229, 1917, 299253, 36359, 1330070, 12318, 320155, 5187, 2290, 1305, 17404, 10097, 105702, 9781, 10992, 5044, 50318, 127424, 1972005, 384, 3389, 216096, 776723, 25300, 130260, 15447, 16868, 18305, 4745, 37081, 345, 1151, 5240, 91, 1, 106, 48939, 707210, 15956, 9792, 5252, 747, 101500, 21635, 149178]
        ),
        parcel_each_level=dict(
        l1=[20663,1336,1744,4,86,140],
        l2=[8478,443,244,6,4742,67,11,2680,2314,66,227,26,326,9,243,65,7,22,397,9,281,1336,468,22,51,1174,14,15,4,74,12,140],
        l3=[1398,831,305,4100,558,676,175,318,117,1,1,6,423,12,244,6,3,1,2264,2026,145,7,14,110,62,100,10,67,2,1813,867,2314,66,7,3,10,207,26,326,9,164,79,11,54,7,22,10,31,51,305,6,281,1336,162,41,25,38,18,66,3,8,9,2,0.1,1,50,1174,14,3,4,74,12,140],
        l4=[750,648,831,305,1219,2881,5,676,175,318,117,1,1,6,423,12,244,6,3,1,2228,9,2026,145,7,14,1,22,31,62,100,10,67,9,2,1608,195,10,867,2314,66,7,3,10,207,26,326,9,164,12,8,7,52,11,54,7,22,10,31,51,305,3,6,281,1336,118,162,41,25,38,18,66,3,8,9,2,0.1,1,50,1174,14,12,3,4,74,12,140],
        
        ),
        
        map_dict={1: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], 1: [64], 2: [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], 3: [83], 4: [84, 85], 5: [86]},
                  2: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1: [11, 12, 13, 14, 15], 2: [16], 3: [17], 4: [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], 5: [32], 6: [33, 34], 7: [35, 36, 37, 38], 8: [39], 9: [40], 10: [41, 42, 43, 44], 11: [45], 12: [46], 13: [47], 14: [48, 49, 50, 51, 52], 15: [53, 54], 16: [55], 17: [56], 18: [57, 58, 59, 60], 19: [61, 62], 20: [63], 21: [64], 22: [65, 66, 67, 68, 69, 70, 71], 23: [72, 73, 74, 75, 76], 24: [77, 78], 25: [79], 26: [80], 27: [81, 82], 28: [83], 29: [84], 30: [85], 31: [86]},
                  3: {0: [0, 1], 1: [2], 2: [3], 3: [4, 5], 4: [6], 5: [7], 6: [8], 7: [9], 8: [10], 9: [11], 10: [12], 11: [13], 12: [14], 13: [15], 14: [16], 15: [17], 16: [18], 17: [19], 18: [20, 21], 19: [22], 20: [23], 21: [24], 22: [25], 23: [26, 27, 28], 24: [29], 25: [30], 26: [31], 27: [32], 28: [34], 29: [35, 36, 37], 30: [38], 31: [39], 32: [40], 33: [41], 34: [42], 35: [43], 36: [44], 37: [45], 38: [46], 39: [47], 40: [48], 41: [49, 50, 51, 52], 42: [53], 43: [54], 44: [55], 45: [56], 46: [57], 47: [58], 48: [59], 49: [60], 50: [62], 51: [63], 52: [64], 53: [66], 54: [67], 55: [68], 56: [69], 57: [70], 58: [71], 59: [72], 60: [73], 61: [74], 62: [75], 63: [76], 64: [77], 65: [78], 66: [79], 67: [80], 68: [82], 69: [83], 70: [84], 71: [85], 72: [86]}}



    ),

)

